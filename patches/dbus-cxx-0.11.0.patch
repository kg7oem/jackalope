diff -ru dbus-cxx-0.11.0/CMakeLists.txt jackalope-dbus-cxx/CMakeLists.txt
--- dbus-cxx-0.11.0/CMakeLists.txt	2019-06-06 17:38:51.000000000 -0700
+++ jackalope-dbus-cxx/CMakeLists.txt	2020-01-06 13:24:57.663268451 -0800
@@ -1,16 +1,16 @@
-#   This file is part of the dbus-cxx library.                            
-#                                                                         
-#   The dbus-cxx library is free software; you can redistribute it and/or 
-#   modify it under the terms of the GNU General Public License           
-#   version 3 as published by the Free Software Foundation.               
-#                                                                         
-#   The dbus-cxx library is distributed in the hope that it will be       
-#   useful, but WITHOUT ANY WARRANTY; without even the implied warranty   
-#   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU   
-#   General Public License for more details.                              
-#                                                                         
-#   You should have received a copy of the GNU General Public License     
-#   along with this software. If not see <http://www.gnu.org/licenses/>.  
+#   This file is part of the dbus-cxx library.
+#
+#   The dbus-cxx library is free software; you can redistribute it and/or
+#   modify it under the terms of the GNU General Public License
+#   version 3 as published by the Free Software Foundation.
+#
+#   The dbus-cxx library is distributed in the hope that it will be
+#   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
+#   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+#   General Public License for more details.
+#
+#   You should have received a copy of the GNU General Public License
+#   along with this software. If not see <http://www.gnu.org/licenses/>.
 
 project( dbus-cxx )
 
@@ -53,7 +53,7 @@
 CHECK_TYPE_SIZE( "long int" DBUS_CXX_SIZEOF_LONG_INT )
 configure_file( dbus-cxx-config.h.cmake dbus-cxx/dbus-cxx-config.h )
 
-# 
+#
 # All sources
 #
 set( DBUS_CXX_SOURCES
@@ -132,23 +132,22 @@
     ${CMAKE_CURRENT_BINARY_DIR}/dbus-cxx/dbus-cxx-config.h
 )
 
-set( DBUS_CXX_INCLUDE_DIRECTORIES 
-    ${CMAKE_CURRENT_SOURCE_DIR} 
+set( DBUS_CXX_INCLUDE_DIRECTORIES
+    ${CMAKE_CURRENT_SOURCE_DIR}
     ${CMAKE_CURRENT_SOURCE_DIR}/dbus-cxx
     ${CMAKE_CURRENT_BINARY_DIR}
     ${CMAKE_CURRENT_BINARY_DIR}/dbus-cxx )
-include_directories( ${DBUS_CXX_INCLUDE_DIRECTORIES} 
-    ${dbus_INCLUDE_DIRS} 
+include_directories( ${DBUS_CXX_INCLUDE_DIRECTORIES}
+    ${dbus_INCLUDE_DIRS}
     ${sigc_INCLUDE_DIRS} )
 
 
 #
 # Target for the library
 #
-add_library( dbus-cxx SHARED ${DBUS_CXX_SOURCES} )
-#add_library( dbus-cxx-static STATIC ${DBUS_CXX_SOURCES} )
+add_library( dbus-cxx ${DBUS_CXX_SOURCES} )
 set_target_properties( dbus-cxx PROPERTIES VERSION 1.0.0 SOVERSION 1 )
-target_link_libraries( dbus-cxx ${dbus_LIBS} ${sigc_LIBS} -lrt )
+target_link_libraries( dbus-cxx ${dbus_LIBS} ${sigc_LIBS} -lrt ${CMAKE_THREAD_LIBS_INIT} )
 
 #
 # If GLIBMM is used, add in the appropriate packages
@@ -174,7 +173,7 @@
 #
 # https://samthursfield.wordpress.com/2015/11/21/cmake-dependencies-between-targets-and-files-and-custom-commands/
 # https://gist.github.com/socantre/7ee63133a0a3a08f3990
-foreach( filename 
+foreach( filename
     dbus_signal.h.m4
     interface.h.m4
     interfaceproxy.h.m4
@@ -203,8 +202,8 @@
     )
 
     # The custom target tells cmake that we need to generate this
-    add_custom_target( generate-${sanitized_file} 
-        DEPENDS 
+    add_custom_target( generate-${sanitized_file}
+        DEPENDS
             ${output_file}
     )
 
@@ -278,7 +277,7 @@
 # If we want to build the site, we must have doxygen
 #
 if( BUILD_SITE )
-    find_package( Doxygen 
+    find_package( Doxygen
                   REQUIRED dot )
     file( COPY ${CMAKE_CURRENT_SOURCE_DIR}/doc/
           DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/doc/ )
diff -ru dbus-cxx-0.11.0/dbus-cxx/utility.cpp jackalope-dbus-cxx/dbus-cxx/utility.cpp
--- dbus-cxx-0.11.0/dbus-cxx/utility.cpp	2019-06-06 17:38:51.000000000 -0700
+++ jackalope-dbus-cxx/dbus-cxx/utility.cpp	2020-01-06 13:08:21.233622030 -0800
@@ -29,7 +29,7 @@
 
 namespace DBus
 {
-  
+
   /** mutex to lock when initializing */
   std::mutex init_mutex;
 
@@ -53,15 +53,15 @@
 	if (!result) throw std::bad_alloc();
 
         result = dbus_connection_allocate_data_slot( & Connection::m_weak_pointer_slot );
-        if ( not result ) throw ErrorFailed::create(); 
+        if ( not result ) throw ErrorFailed::create();
     }else{
         result = dbus_connection_allocate_data_slot( & Connection::m_weak_pointer_slot );
-        if ( not result ) throw ErrorFailed::create(); 
+        if ( not result ) throw ErrorFailed::create();
     }
 
     initialized_var = true;
   }
-  
+
   bool initialized()
   {
     return initialized_var;
@@ -82,10 +82,10 @@
 
     SL_LOGLEVEL_TO_STRING( stringLevel, level );
 
-    snprintf( buffer, 4096, "0x%08X %s [%s] - %s(%s:%d)", this_id, logger_name, stringLevel, log_string, 
+    snprintf( buffer, 4096, " %s [%s] - %s(%s:%d)", logger_name, stringLevel, log_string,
       location->file,
       location->line_number );
-    std::cerr << buffer << std::endl;
+    std::cerr << this_id << buffer << std::endl;
   }
 
   void setLogLevel( const enum SL_LogLevel level ){
diff -ru dbus-cxx-0.11.0/tools/CMakeLists.txt jackalope-dbus-cxx/tools/CMakeLists.txt
--- dbus-cxx-0.11.0/tools/CMakeLists.txt	2019-06-06 17:38:51.000000000 -0700
+++ jackalope-dbus-cxx/tools/CMakeLists.txt	2020-01-06 13:28:45.157965154 -0800
@@ -1,7 +1,7 @@
 # Check to see if we want to use the bundled libcppgenerate or not
 if( TOOLS_BUNDLED_CPPGENERATE )
     include(${CMAKE_ROOT}/Modules/ExternalProject.cmake)
-    ExternalProject_Add( cppgenerate 
+    ExternalProject_Add( cppgenerate
                          SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libcppgenerate
                          DOWNLOAD_COMMAND ""
                          INSTALL_COMMAND "")
@@ -22,11 +22,10 @@
 link_directories( ${CMAKE_BINARY_DIR} )
 
 include_directories( ${CMAKE_SOURCE_DIR}/dbus-cxx
-    ${CMAKE_BINARY_DIR}/dbus-cxx 
-    ${dbus_INCLUDE_DIRS} 
-    ${sigc_INCLUDE_DIRS} )
+    ${CMAKE_BINARY_DIR}/dbus-cxx
+    ${TOOLS_INCLUDES} )
 
-add_executable( dbus-cxx-xml2cpp 
+add_executable( dbus-cxx-xml2cpp
     generate_adapter.cpp
     generate_proxy.cpp
     parsed_object.cpp
@@ -34,8 +33,8 @@
     xml_parser.cpp
     arg.cpp
     method.cpp
-    signal.cpp 
-    code-generator.cpp 
+    signal.cpp
+    code-generator.cpp
 )
 target_link_libraries( dbus-cxx-xml2cpp ${TOOLS_LINK} ${cppgenerate_LDFLAGS} )
 install( TARGETS dbus-cxx-xml2cpp DESTINATION bin )
@@ -46,6 +45,6 @@
 
 add_executable( dbus-cxx-introspect
     introspect.cpp )
-target_link_libraries( dbus-cxx-introspect ${TOOLS_LINK} )
+target_link_libraries( dbus-cxx-introspect -Wl,--copy-dt-needed-entries ${TOOLS_LINK} )
 install( TARGETS dbus-cxx-introspect DESTINATION bin )
 
diff -ru dbus-cxx-0.11.0/tools/parsed_object.cpp jackalope-dbus-cxx/tools/parsed_object.cpp
--- dbus-cxx-0.11.0/tools/parsed_object.cpp	2019-06-06 17:38:51.000000000 -0700
+++ jackalope-dbus-cxx/tools/parsed_object.cpp	2020-01-06 13:14:54.722079449 -0800
@@ -72,7 +72,7 @@
 std::string cppTypeFromSignature( DBus::Signature sig ){
   DBus::Signature::iterator sigIter = sig.begin();
   std::string returnVal = "";
- 
+
   while( sigIter.is_valid() ){
     std::cout << ((char)sigIter.type()) << std::endl;
     //returnVal += cpp_dbus_type( sigIter.type() );
@@ -243,13 +243,13 @@
     current = m->iterator_support();
     merge( need_support, current );
   }
-  
+
   for ( s = signals.begin(); s != signals.end(); s++ )
   {
     current = s->iterator_support();
     merge( need_support, current );
   }
-  
+
   return need_support;
 }
 
@@ -263,7 +263,7 @@
     current = nsseparator+2;
   }
 
-  if ( current != '\0' ) ns.push_back( std::string( current ) );
+  if ( current != nullptr ) ns.push_back( std::string( current ) );
 
   return ns;
 }
@@ -336,7 +336,7 @@
 {
   if ( not orig_namespace.empty() )
     return orig_namespace + "::" + name();
-  if ( name().empty() ) 
+  if ( name().empty() )
     return "AdapterName";
   return name();
 }
@@ -358,7 +358,7 @@
     current = i->iterator_support();
     merge( need_support, current );
   }
-  
+
   return need_support;
 }
 
